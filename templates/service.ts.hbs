import { Prisma, PrismaClient } from '@prisma/client';

const prisma= new PrismaClient();
const model= prisma.{{lowercasedName}};

const {{lowercasedName}}Select = {
        {{#each fields}}
            {{#ifAnd this.relatedModel this.isMainRelation}} 
                {{#if this.relation}}
                        {{this.name}}: { 
                            select:{
                                {{#each this.relatedModel.fields}} 
                                    {{#ifAndNot this.isRelation this.isList}}
                                            {{this.name}}: true,
                                    {{/ifAndNot}}
                                {{/each}} 
                            }
                        }, 
                {{/if}}
            {{else}}
                {{#ifAndNot this.isRelation this.isList}}
                        {{this.name}}: true,
                {{/ifAndNot}}
            {{/ifAnd}}
        {{/each}}
        {{#if @root.getCounts}}
            _count: {
                select: {
                {{#each fields}}
                    {{#ifAnd this.isRelation this.isList}}
                        {{this.name}}: true, 
                    {{/ifAnd}}
                {{/each}}
                }
            }
        {{/if}}
    }

const {{lowercasedName}} = Prisma.validator<Prisma.{{name}}Args>()({
    select: {{lowercasedName}}Select
})

export type {{name}}Select = Prisma.{{name}}GetPayload<typeof {{lowercasedName}}>
const select = {{lowercasedName}}.select;

{{#each methods}}
export const {{this.name}}{{@root.name}} = async ({{#each params}} {{this.name}}: {{this.type}}{{#unless @last}},{{/unless}}{{/each}}) => {
    const _select = {...select} as Prisma.{{@root.name}}Select
    {{#each @root.fields}}
        {{#ifVisible this.visibility ../visibilityName }}
            _select.{{this.name}} = select?.{{this.name}} ?? true
        {{else}}
            _select.{{this.name}} = false
        {{/ifVisible}}
    {{/each}}
    const result = await model.{{#if this.customName}}{{this.customName}}{{else}}{{this.name}}{{/if}}({{#if this.requestParams}}{    
        {{#each this.requestParams}}
        {{#if this.as}} {{this.as}} {{else}} {{this.name}}{{/if}}: 
        {{#if this.values}}
            {{#each this.values}}{
                {{this.name}},
            },
            {{/each}}
        {{else}}
            {{this.name}},
        {{/if}}
        {{/each}} 
            select: _select,
    }{{else}}{select: _select}{{/if}});

    return result;

};
{{/each}}
